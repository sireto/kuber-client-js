name: Build and Publish to npmjs

on:
  push:
    tags:
      - 'v*.*.*'  # Adjust the tag pattern as needed
  workflow_dispatch:  # Allows manual triggering

permissions:
  deployments: write
  packages: write
  repository-projects: read
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
    
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Read package.json version
        id: read_package_version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Update package.json version if mismatch
        if: steps.get_version.outputs.VERSION != steps.read_package_version.outputs.PACKAGE_VERSION
        run: |
          echo "Tag version ${{ steps.get_version.outputs.VERSION }} does not match package.json version ${{ steps.read_package_version.outputs.PACKAGE_VERSION }}. Updating package.json."
          npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
        
      - name: Build project
        run: yarn build
        
      - name: Update npm
        run: npm install -g npm@latest

      - name: Publish to npm
        run: npm publish --access public
        working-directory: ./dist
